using Gtk 4.0;
using BarBar 1.0;

BarBar.Background background {
  top-margin: 0;
  bottom-margin: 0;
  right-margin: 0;
  left-margin: 1050;

  Gtk.Box {
    hexpand: true;
    orientation: vertical;

    [child]
    Gtk.Label {
      label: bind time.time;
      justify: center;
      name: "time";
    }

    [child]
    Gtk.Label {
      label: bind date.time;
      justify: center;
      name: "date";
    }

    Gtk.Box {
      orientation: horizontal;

      [child]
      Gtk.Label {
        xalign: 0;
        label: "System";
        name: "header";
      }

      [child]
      Gtk.Separator {
        hexpand: true;
        // orientation: horizontal;
      }
    }

    Gtk.Grid {
      hexpand: true;

      [child]
      Gtk.Label {
        label: "Hostname:";
        xalign: 0;

        layout {
          column: 0;
          row: 0;
        }
      }

      [child]
      Gtk.Label {
        hexpand: true;
        label: bind hostname.value;
        xalign: 1;

        layout {
          column: 1;
          row: 0;
        }
      }

      [child]
      Gtk.Label {
        label: "OS:";
        xalign: 0;

        layout {
          column: 0;
          row: 1;
        }
      }

      [child]
      Gtk.Label {
        label: "Arch linux";
        xalign: 1;

        layout {
          column: 1;
          row: 1;
        }
      }

      [child]
      Gtk.Label {
        label: "Kernel:";
        xalign: 0;

        layout {
          column: 0;
          row: 2;
        }
      }

      [child]
      Gtk.Label {
        label: bind kernel.value;
        xalign: 1;

        layout {
          column: 1;
          row: 2;
        }
      }

      [child]
      Gtk.Label {
        label: "Uptime:";
        xalign: 0;

        layout {
          column: 0;
          row: 3;
        }
      }

      [child]
      Gtk.Label {
        // label: "1h 37m 56s";
        label: bind uptime.time;
        xalign: 1;

        layout {
          column: 1;
          row: 3;
        }
      }

      [child]
      Gtk.Label {
        label: "Processes:";
        xalign: 0;

        layout {
          column: 0;
          row: 4;
        }
      }

      [child]
      Gtk.Label {
        label: "352";
        xalign: 1;

        layout {
          column: 1;
          row: 4;
        }
      }
    }

    Gtk.Box {
      orientation: horizontal;

      [child]
      Gtk.Label {
        xalign: 0;
        label: "Cpu";
        name: "header";
      }

      [child]
      Gtk.Separator {
        hexpand: true;
        // orientation: horizontal;
      }
    }

    Gtk.Grid {
      hexpand: true;

      [child]
      Gtk.Label {
        label: "Cpu:";
        xalign: 0;

        layout {
          column: 0;
          row: 0;
        }
      }

      [child]
      Gtk.Label {
        hexpand: true;
        halign: end;
        label: "800Mhz";
        xalign: 1;

        layout {
          column: 1;
          row: 0;
        }
      }

      [child]
      Gtk.Label {
        label: "Cpu Temperature";
        xalign: 0;

        layout {
          column: 0;
          row: 1;
        }
      }

      // TODO: pretty print temp

      [child]
      Gtk.Label {
        label: bind temp.temperature;
        xalign: 1;

        layout {
          column: 1;
          row: 1;
        }
      }

      [child]
      Gtk.Label {
        label: "Cpu Usage";
        xalign: 0;

        layout {
          column: 0;
          row: 2;
        }
      }

      // TODO: pretty print cpu

      [child]
      Gtk.Label {
        label: bind cpu.percent;
        xalign: 1;

        layout {
          column: 1;
          row: 2;
        }
      }
    }

    [child]
    BarBar.Graph {
      value: bind cpu.percent;
      min-height: 40;
    }

    //    [child]
    //    BarBar.CpuProcesses {}
    // 
    Gtk.Box {
      orientation: horizontal;

      [child]
      Gtk.Label {
        xalign: 0;
        label: "Memory";
        name: "header";
      }

      [child]
      Gtk.Separator {
        hexpand: true;
        // orientation: horizontal;
      }
    }

    Gtk.Grid {
      hexpand: true;

      [child]
      Gtk.Label {
        label: "Swap Usage:";
        xalign: 0;

        layout {
          column: 0;
          row: 0;
        }
      }

      // TODO: fix
      // [child]
      // Gtk.Label {
      //   hexpand: true;
      //   label: bind swap.total;
      //   xalign: 1;
      // 
      //   layout {
      //     column: 1;
      //     row: 0;
      //   }
      // }

      [child]
      BarBar.Label {
        sensor: swap;
        hexpand: true;
        templ: "{{BarBarSwap.used}} / {{BarBarSwap.total}}";

        [child]
        Gtk.Label {
          xalign: 1;
        }

        layout {
          column: 1;
          row: 0;
        }
      }

      // TODO: fix

      [child]
      Gtk.Label {
        label: "Memory Usage:";
        xalign: 0;

        layout {
          column: 0;
          row: 1;
        }
      }

      [child]
      BarBar.Label {
        sensor: mem;
        hexpand: true;
        templ: "{{BarBarMem.used}} / {{BarBarMem.total}}";

        [child]
        Gtk.Label {
          xalign: 1;
        }

        layout {
          column: 1;
          row: 1;
        }
      }
    }

    [child]
    BarBar.Graph {
      value: bind mem.percent;
      min-height: 40;
    }

    Gtk.Box {
      orientation: horizontal;

      [child]
      Gtk.Label {
        xalign: 0;
        label: "Disk";
        name: "header";
      }

      [child]
      Gtk.Separator {
        hexpand: true;
      }
    }

    Gtk.Grid {
      hexpand: true;

      [child]
      Gtk.Label {
        label: "Disk Usage:";
        xalign: 0;

        layout {
          column: 0;
          row: 0;
        }
      }

      // TODO: fix all

      [child]
      Gtk.Label {
        hexpand: true;
        label: bind fs.percent;
        xalign: 1;

        layout {
          column: 1;
          row: 0;
        }
      }

      [child]
      Gtk.Label {
        label: "IO Read / Write:";
        xalign: 0;

        layout {
          column: 0;
          row: 1;
        }
      }

      [child]
      BarBar.Label {
        sensor: disk;
        hexpand: true;
        templ: "{{BarBarDisk.read}} / {{BarBarDisk.write}}";

        [child]
        Gtk.Label {
          xalign: 1;
        }

        layout {
          column: 1;
          row: 1;
        }
      }

      // Gtk.Label {
      //   hexpand: true;
      //   label: "95,7G/1830G";
      //   xalign: 1;
      // 
      //   layout {
      //     column: 1;
      //     row: 1;
      //   }
      // }
    }

    [child]
    BarBar.Graph {
      // you should set the max-value to the max speed of your disk
      // use hdparm to get this info
      value: bind disk.read-speed;
      min-height: 40;
    }

    [child]
    BarBar.Graph {
      // you should set the max-value to the max speed of your disk
      // use hdparm to get this info
      value: bind disk.write-speed;
      min-height: 40;
    }

    Gtk.Box {
      orientation: horizontal;

      [child]
      Gtk.Label {
        xalign: 0;
        label: "Network";
        name: "header";
      }

      [child]
      Gtk.Separator {
        hexpand: true;
      }
    }

    Gtk.Grid {
      hexpand: true;

      [child]
      Gtk.Label {
        label: "Default Gateway:";
        xalign: 0;

        layout {
          column: 0;
          row: 0;
        }
      }

      [child]
      Gtk.Label {
        hexpand: true;
        label: bind gateway.value;
        xalign: 1;

        layout {
          column: 1;
          row: 0;
        }
      }

      [child]
      Gtk.Label {
        label: "Internal IP Address:";
        xalign: 0;

        layout {
          column: 0;
          row: 1;
        }
      }

      [child]
      Gtk.Label {
        hexpand: true;
        label: bind net.address;
        xalign: 1;

        layout {
          column: 1;
          row: 1;
        }
      }

      [child]
      Gtk.Label {
        label: "External IP Address:";
        xalign: 0;

        layout {
          column: 0;
          row: 2;
        }
      }

      [child]
      Gtk.Label {
        hexpand: true;
        label: bind external.value;
        xalign: 1;

        layout {
          column: 1;
          row: 2;
        }
      }

      [child]
      Gtk.Label {
        label: "Upload speed / Download Total:";
        xalign: 0;

        layout {
          column: 0;
          row: 3;
        }
      }

      [child]
      BarBar.Label {
        hexpand: true;
        sensor: net;
        templ: "{{BarBarNetwork.download}} / {{BarBarNetwork.upload}}";

        [child]
        Gtk.Label {
          xalign: 1;
        }

        layout {
          column: 1;
          row: 3;
        }
      }

      [child]
      Gtk.Label {
        label: "Upload speed / Download Speed:";
        xalign: 0;

        layout {
          column: 0;
          row: 4;
        }
      }

      [child]
      BarBar.Label {
        hexpand: true;
        sensor: net;
        templ: "{{BarBarNetwork.down_speed}} / {{BarBarNetwork.up_speed}}";

        [child]
        Gtk.Label {
          xalign: 1;
        }

        layout {
          column: 1;
          row: 4;
        }
      }
    }

    [child]
    BarBar.Graph {
      // you should set the max-value to the max speed of your network
      value: bind net.down-speed;
      min-height: 40;
    }

    [child]
    BarBar.Graph {
      // you should set the max-value to the max speed of your network
      value: bind net.up-speed;
      min-height: 40;
    }

    Gtk.Box {
      orientation: horizontal;

      [child]
      Gtk.Label {
        xalign: 0;
        label: "Procceses:";
        name: "header";
      }

      [child]
      Gtk.Separator {
        hexpand: true;
      }
    }

    [child]
    BarBar.CpuProcesses {
      number: 3;
      order: io;
      seperate-cpu: false;
    }
  }

  // Gtk.LevelBar {
  //   orientation: vertical;
  //   value: bind cpu.percent;
  // }
  // BarBar.Rotary {
  //   value: bind cpu.percent;
  // }
  // Gtk.Label clock {}
  // Gtk.Label date {}
  // Gtk.Label system {}
  // Gtk.Label cpu {}
  // BarBar.TopCpu {
  // }
  // Gtk.Label mem {}
  // BarBar.TopMem {
  // }
  // BarBar.TopCpu {
  // }
}

BarBar.Cpu cpu {
  interval: 1000;
}

BarBar.Mem mem {
  interval: 1000;
}

BarBar.Clock time {
  interval: 1000;
  format: "%H:%M";
}

BarBar.Clock date {
  // todo OMP stuff, so we can make the clock edge trigger.
  // then we could do 1000*3600*24; and just update the clock once per day.
  interval: 1000;
  format: "%B %d, %Y";
}

BarBar.Cmd hostname {
  cmd: "uname -n";
}

BarBar.Cmd kernel {
  cmd: "uname -r";
}

BarBar.Uptime uptime {
  interval: 1000;
  format: "%cy%(years )%ch%(hours )%02mm %02ss";
}

BarBar.Temperature temp {}

BarBar.Filesystem fs {
  path: "/";
}

BarBar.Swap swap {}

BarBar.Network net {
  interface: "wlan0";
  interval: 1000;
}

BarBar.Cmd external {
  cmd: "wget -q -O- https://ipecho.net/plain";
}

BarBar.Cmd gateway {
  cmd: "gateway";
}

BarBar.Disk disk {
  device: "sda";
}
