using Gtk 4.0;
using BarBar 1.0;

BarBar.Bar bar {
  bar-pos: top;
  Gtk.ActionBar {
    [start]
    BarBar.RiverTag {
    }

    [center]
    BarBar.RiverView {
    }

    [end]
    Gtk.Label {
      label: bind clock.time;
    }

    // [end]
    // Gtk.LevelBar {
    //   value: bind mem.percent;
    //   orientation: vertical;
    //   inverted: true;
    // }

    // [end]
    // Gtk.LevelBar {
    //   value: bind cpu.percent;
    //   orientation: vertical;
    //   inverted: true;
    // }

    // [end]
    // BarBar.Label clock_label {
    //   templ: "{{BarBarClock.time}}";
    //   // label: bind $barbar_strdup_printf("The time is now exactly!", clock) as <string>;
    // }

    [end]
    BarBar.Label network_label {
      templ: "{{BarBarNetwork.interface}}: {{BarBarNetwork.down_speed}}b ⬇️ | {{BarBarNetwork.up_speed}}b ⬆️ ";
    }

    // [end]
    // Gtk.Label {
    //    label: bind battery.percent;
    // }

    [end]
    Gtk.Label {
      // label: bind $barbar_strdup_printf("%0.f°C<span color=\"#bd111f\"> </span>", temperature.temperature) as <string>;
      use-markup: true;
    }

    [end]
    BarBar.Label temp {
      //templ: "{{BarBarTemperature.temperature}}";
      templ: "{{i32(BarBarTemperature.temperature)}} ";
    }

    [end]
    Gtk.LevelBar {
      value: bind battery.percent;
      orientation: vertical;
      inverted: true;
    }

    BarBar.SensorWidget {
      sensor: BarBar.Inhibitor {
      }
      child: Gtk.ToggleButton {
        label: "inhibitor";
      }
    }

    [end]
    Gtk.ScaleButton {
      adjustment: Adjustment {
        lower: 0.0;
        upper: 1.0;
        page-increment: 0.1;
        step-increment: 0.1;
        value: bind backlight.percent bidirectional;
      };
    }

    // [end]
    // Gtk.ScaleButton {
    //    adjustment: Adjustment {
    //      lower: 0.0;
    //      upper: 1.0;
    //      page-increment: 0.1;
    //      step-increment: 0.1;
    //      value: bind plumb.value bidirectional;
    //    };
    // }
  }
}

BarBar.Background {
  top-margin: 45;
  bottom-margin: 30;
  right-margin: 800;
  Gtk.LevelBar {
    value: bind mem.percent;
    orientation: vertical;
    inverted: true;
  }
}


BarBar.Clock clock {
  interval: 1000;
  format: "%H:%M:%S";
  // tick => $update2(clock_label);
}


BarBar.Mem mem {
}

BarBar.Cpu cpu {
}

BarBar.Network network {
  interface: "wlan0";
  tick => $update2(network_label);
}

BarBar.Backlight backlight {
}

BarBar.Battery battery {
}

// BarBar.Wireplumber plumb {
// }

BarBar.Temperature temperature {
  tick => $update2(temp);
}

BarBar.Mpris mpris {
}
